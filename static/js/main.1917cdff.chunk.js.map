{"version":3,"sources":["../../src/index.tsx","App.js","index.js"],"names":["GoogleAddressAutocomplete","ref","React","clearAddress","current","this","placeselected","undefined","props","handlePlaceSelect","autocomplete","getPlace","handleScriptLoad","google","render","component","button","type","onClick","url","onLoad","console","clearbutton","className","App","apikey","place","alert","formatted_address","ReactDOM","document","getElementById"],"mappings":"glBAqBaA,EAAb,Y,QASE,c,aACE,wBATMC,IAAMC,sBAUZ,mBAAwB,0BAAxB,IACA,oBAAyB,2BAAzB,IACA,eAAoB,sBAApB,I,IAbJ,G,EAAA,G,6EAAA,wCAgBEC,WACE,IAAIC,EAAmCC,KAAKJ,IAA5C,QACA,MAAIG,IACFA,YAGFC,KAAA,SAAc,CAACC,mBAAeC,SAC9B,GAAIF,KAAKG,MAAMF,eACbD,KAAA,6BAxBN,oBA4BEI,WACEJ,KAAA,SAAc,CAACC,cAAeD,KAAKK,aAAaC,gBAChD,GAAIN,KAAKG,MAAMF,eACbD,KAAA,oBAAyBA,KAAKK,aAA9B,aA/BN,mBAmCEE,WAEEP,KAAA,aAAoB,IAAIQ,mBAAJ,aAClBR,KAAKJ,IADa,QADpB,IAIAI,KAAA,uBAA4B,CAAC,qBAA7B,sBAEAA,KAAA,yCAA+CA,KAA/C,oBA1CJ,SA6CES,WACE,IAAMC,EAAN,KACIP,EAAQ,EAAH,GAAOO,EAAhB,cACOP,EAAK,qBACLA,EAAK,OACZ,IAAIQ,OAAJ,EAIA,OAHID,oBAAJ,GAA+BA,wBAC7BC,EAASD,QAATC,aAGA,wCACE,+CAAOC,KAAK,QAAWT,GAAOP,IAAKc,EAAUd,OAD/C,OAEE,gCAAMiB,QAAS,kBAAMH,EAAN,iBAFjB,GAGE,6BACEI,IAAK,+CAAiDJ,QAAjD,OAA0E,oBAC/EK,OAAQf,KAAKO,qBA5DvB,gBAGSZ,eAAe,CACpBM,cAAe,mBAAwBe,6CAAxB,IACfC,YAAa,kCAAQL,KAAK,UAFN,SAGpBM,UAAW,+B,MCVAC,MAZH,IACH,kBAAC,EAAD,CACLC,OAAO,0CACPnB,cAAgBoB,IACXA,GACDC,MAAM,iBAAmBD,EAAME,sBCJvCC,IAASf,OAAO,kBAAC,EAAD,MAASgB,SAASC,eAAe,U","file":"static/js/main.1917cdff.chunk.js","sourcesContent":["import * as React from 'react'\n// @ts-ignore\nimport Script from 'react-load-script'\nimport Autocomplete = google.maps.places.Autocomplete;\nimport PlaceResult = google.maps.places.PlaceResult;\n\n//import styles from './styles.module.css'\n\ntype PlaceSelected = (place?: PlaceResult) => any;\n\nexport interface Props extends React.HTMLProps<HTMLInputElement> {\n  apikey: string,\n  placeselected?: PlaceSelected\n  clearbutton: HTMLElement\n  className: string\n}\n\nexport interface State {\n  placeselected?: PlaceSelected\n}\n\nexport class GoogleAddressAutocomplete extends React.Component<Props, State> {\n  private ref = React.createRef<HTMLInputElement>()\n  private autocomplete: Autocomplete;\n  static defaultProps = {\n    placeselected: (place: PlaceResult) => console.log(\"Default placeselected function\", place),\n    clearbutton: <button type='button'>Clear</button>,\n    className: 'google-address-autocomplete'\n  }\n\n  constructor(props: Props) {\n    super(props);\n    this.handleScriptLoad = this.handleScriptLoad.bind(this);\n    this.handlePlaceSelect = this.handlePlaceSelect.bind(this);\n    this.clearAddress = this.clearAddress.bind(this);\n  }\n\n  clearAddress() {\n    let current: HTMLInputElement | null = this.ref.current;\n    if (current != null) {\n      current.value = '';\n    }\n\n    this.setState({placeselected: undefined})\n    if (this.props.placeselected != undefined) {\n      this.props.placeselected(undefined)\n    }\n  }\n\n  handlePlaceSelect() {\n    this.setState({placeselected: this.autocomplete.getPlace});\n    if (this.props.placeselected != undefined) {\n      this.props.placeselected(this.autocomplete.getPlace())\n    }\n  }\n\n  handleScriptLoad() {\n    const options = {};//{types: ['(cities)']};\n    this.autocomplete = new google.maps.places.Autocomplete(\n      this.ref.current as HTMLInputElement,\n      options);\n    this.autocomplete.setFields(['address_components',\n      'formatted_address']);\n    this.autocomplete.addListener('place_changed', this.handlePlaceSelect);\n  }\n\n  render() {\n    const component = this;\n    let props = {...component.props};\n    delete props['placeselected'];\n    delete props['apikey'];\n    let button = undefined;\n    if (component.state != null && component.state.placeselected != undefined) {\n      button = component.props.clearbutton;\n    }\n    return (\n      <React.Fragment>\n        <input type='text' {...props} ref={component.ref}/>&nbsp;\n        <span onClick={() => component.clearAddress()}>{button}</span>\n        <Script\n          url={\"https://maps.googleapis.com/maps/api/js?key=\" + component.props.apikey + \"&libraries=places\"}\n          onLoad={this.handleScriptLoad}\n        />\n      </React.Fragment>\n    )\n  }\n}\n","import React from 'react'\n\nimport {GoogleAddressAutocomplete} from 'react-google-address-autocomplete'\nimport 'react-google-address-autocomplete/dist/index.css'\n\nconst App = () => {\n  return <GoogleAddressAutocomplete\n    apikey='AIzaSyA15J1FkkLtCM6Z4wXcOIplOLmUnkfLaes'\n    placeselected={(place) => {\n      if(place){\n        alert(\"You selected: \" + place.formatted_address)\n      }\n    }\n    }\n  />\n};\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}